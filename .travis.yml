#
# Copyright (c) 2016-2020 Fernando Pelliccioni developers (see AUTHORS)
#

branches:
  only:
  - master
  # - dev

env:
   global:
    #  - CONAN_REFERENCE: "algorithm/0.1"
    #  - CONAN_USERNAME: "fpelliccioni"
    #  - CONAN_LOGIN_USERNAME: "fpelliccioni"
    #  - CONAN_CHANNEL: "stable"
    #  - CONAN_UPLOAD: "https://api.bintray.com/conan/tao-cpp/tao"
     - TAO_VERSION_MAJOR: "0"
     - TAO_VERSION_MINOR: "1"


linux: &linux
   os: linux
   sudo: required
   language: python
   python: "3.7"
   services:
     - docker

# osx: &osx
#    os: osx
#    language: generic

matrix:
   include:
      - <<: *linux
        env: CONAN_GCC_VERSIONS=9 CONAN_DOCKER_IMAGE=conanio/gcc9

install:
  - cd ${TRAVIS_BUILD_DIR}
  - chmod +x .travis/install.sh
  - ./.travis/install.sh

script:
  - cd ${TRAVIS_BUILD_DIR}

  - git rev-list --count master
  - git fetch --unshallow
  - git fetch origin master:master
  - git rev-list --count master

  - chmod +x .travis/run.sh
  - ./.travis/run.sh

# Upload Alias

  - |
    cd ${TRAVIS_BUILD_DIR}
    echo $TRAVIS_REPO_SLUG
    REPO_NAME=$(echo $TRAVIS_REPO_SLUG| cut -d'/' -f 2)
    echo $REPO_NAME

  - eval $(python ci_utils/set_envvars_and_files.py)
  #TODO(fernando): configure the remote and user using environment variables
  # - conan remote add upload_repo https://api.bintray.com/conan/tao-cpp/tao
  # - conan remote list
  - conan user
  # - conan user ${CONAN_LOGIN_USERNAME} -r upload_repo -p ${CONAN_PASSWORD}
  # - conan user
  - echo "conan alias ${REPO_NAME}/0.1.X@tao/${TAO_CONAN_CHANNEL} ${REPO_NAME}/${TAO_CONAN_VERSION}@tao/${TAO_CONAN_CHANNEL}"
  - conan alias "${REPO_NAME}/0.1.X@tao/${TAO_CONAN_CHANNEL}" "${REPO_NAME}/${TAO_CONAN_VERSION}@tao/${TAO_CONAN_CHANNEL}"
  - echo "conan upload ${REPO_NAME}/0.1.X@tao/${TAO_CONAN_CHANNEL} --all -r upload_repo"
  - conan upload "${REPO_NAME}/0.1.X@tao/${TAO_CONAN_CHANNEL}" --all -r upload_repo        


# notifications:
#   email: false
#   webhooks:
#     urls: https://webhooks.gitter.im/e/a19dd2b03bf676d2b622
#     on_success: change
#     on_failure: always

